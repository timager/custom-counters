{"version":3,"sources":["hooks/ConfigContext.js","hooks/useSavedConfig.js","hooks/useConfig.js","components/RandomNumber.jsx","components/Config.jsx","App.js","reportWebVitals.js","index.js"],"names":["ConfigContext","createContext","DEFAULT_CONFIG","min","max","useSavedConfig","saved","JSON","parse","localStorage","getItem","c","setItem","stringify","useConfig","property","useContext","context","setContext","saveConfig","Error","value","newContext","RandomNumber","useState","setNumber","isAnimated","setIsAnimated","className","onClick","Math","ceil","floor","random","getRandomInDiapason","setTimeout","Config","setMin","setMax","type","onChange","e","Number","target","App","savedConfig","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEaA,EAAgBC,0BCFhBC,EAAiB,CAC5BC,IAAK,EACLC,IAAK,GAGA,SAASC,IACd,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAG5C,MAAO,CAFG,2BAAQR,GAAR,OAA4BI,QAA5B,IAA4BA,IAAS,IAC5B,SAAAK,GAAC,OAAIF,aAAaG,QAAQ,SAAUL,KAAKM,UAAUF,MCJjE,SAASG,EAAWC,GAAW,IAAD,EACLC,qBAAWhB,GADN,mBAC5BiB,EAD4B,KACnBC,EADmB,OAEZb,IAAdc,EAF0B,oBAGnC,IAAKF,EACH,MAAMG,MAAM,6DAQd,MAAO,CANeH,EAAQF,GACV,SAACM,GACnB,IAAIC,EAAU,2BAAQL,GAAR,kBAAkBF,EAAWM,IAC3CH,EAAWI,GACXH,EAAWG,K,WCXR,SAASC,IAAiB,IAAD,EACHC,mBAAS,OADN,mBACvBH,EADuB,KAChBI,EADgB,OAEMD,oBAAS,GAFf,mBAEvBE,EAFuB,KAEXC,EAFW,OAGhBb,EAAU,OAAjBX,EAHuB,sBAIhBW,EAAU,OAAjBV,EAJuB,oBAkB9B,OACE,qBACEwB,WAAYF,EAAa,sBAAwB,KAAO,gBACxDG,QAfJ,WACEF,GAAc,GACdF,EAIF,SAA8BtB,EAAKC,GAGjC,OAFAD,EAAM2B,KAAKC,KAAK5B,GAChBC,EAAM0B,KAAKE,MAAM5B,EAAM,GAChB0B,KAAKE,MAAMF,KAAKG,UAAY7B,EAAMD,IAAQA,EAPvC+B,CAAoB/B,EAAKC,IACnC+B,YAAW,kBAAMR,GAAc,KAAQ,MAUvC,SAGGN,ICvBA,SAASe,IAAW,IAAD,EACFtB,EAAU,OADR,mBACjBX,EADiB,KACZkC,EADY,OAEFvB,EAAU,OAFR,mBAEjBV,EAFiB,KAEZkC,EAFY,KAGxB,OACE,sBAAKV,UAAW,SAAhB,UACE,iDACE,uBAAOW,KAAK,SAASlB,MAAOlB,EACrBqC,SAAU,SAACC,GAAD,OAAOJ,EAAOK,OAAOD,EAAEE,OAAOtB,cAEjD,iDACE,uBAAOkB,KAAK,SAASlB,MAAOjB,EACrBoC,SAAU,SAACC,GAAD,OAAOH,EAAOI,OAAOD,EAAEE,OAAOtB,iBCSxCuB,MAff,WAAiB,IAAD,EACQvC,IAAfwC,EADO,sBAEgBrB,mBAASqB,GAFzB,mBAEP5B,EAFO,KAEEC,EAFF,KAGd,OACE,qBAAKU,UAAW,MAAhB,SACE,eAAC5B,EAAc8C,SAAf,CAAwBzB,MAAO,CAACJ,EAASC,GAAzC,UACE,cAACkB,EAAD,IACA,qBAAKR,UAAW,qBAAhB,SACE,cAACL,EAAD,YCHKwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.c22cec50.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const ConfigContext = createContext()\n","export const DEFAULT_CONFIG = {\n  min: 1,\n  max: 6,\n}\n\nexport function useSavedConfig () {\n  let saved = JSON.parse(localStorage.getItem('config'))\n  let config = { ...DEFAULT_CONFIG, ...(saved ?? []) }\n  const saveConfig = c => localStorage.setItem('config', JSON.stringify(c))\n  return [config, saveConfig]\n}","import { ConfigContext } from './ConfigContext'\nimport { useContext } from 'react'\nimport { useSavedConfig } from './useSavedConfig'\n\nexport function useConfig (property) {\n  const [context, setContext] = useContext(ConfigContext)\n  const [, saveConfig] = useSavedConfig()\n  if (!context) {\n    throw Error('useConfig hook must be used inside ConfigContext.Provider')\n  }\n  const propertyValue = context[property]\n  const setProperty = (value) => {\n    let newContext = { ...context, [property]: value }\n    setContext(newContext)\n    saveConfig(newContext)\n  }\n  return [propertyValue, setProperty]\n}","import React, { useState } from 'react'\nimport { useConfig } from '../hooks/useConfig'\n\nexport function RandomNumber () {\n  const [value, setNumber] = useState('...')\n  const [isAnimated, setIsAnimated] = useState(false)\n  const [min] = useConfig('min')\n  const [max] = useConfig('max')\n\n  function generateNewNumber () {\n    setIsAnimated(true)\n    setNumber(getRandomInDiapason(min, max))\n    setTimeout(() => setIsAnimated(false), 400)\n  }\n\n  function getRandomInDiapason (min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max + 1)\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  return (\n    <div\n      className={(isAnimated ? 'rotation-animation ' : ' ') + 'random-number'}\n      onClick={generateNewNumber}>\n      {value}\n    </div>\n  )\n}","import { useConfig } from '../hooks/useConfig'\n\nexport function Config () {\n  const [min, setMin] = useConfig('min')\n  const [max, setMax] = useConfig('max')\n  return (\n    <div className={'config'}>\n      <label>От\n        <input type='number' value={min}\n               onChange={(e) => setMin(Number(e.target.value))}/>\n      </label>\n      <label>До\n        <input type='number' value={max}\n               onChange={(e) => setMax(Number(e.target.value))}/>\n      </label>\n    </div>\n  )\n}","import './App.css'\nimport React, { useState } from 'react'\nimport { RandomNumber } from './components/RandomNumber'\nimport { Config } from './components/Config'\nimport { ConfigContext } from './hooks/ConfigContext'\nimport { useSavedConfig } from './hooks/useSavedConfig'\n\nfunction App () {\n  const [savedConfig] = useSavedConfig()\n  const [context, setContext] = useState(savedConfig)\n  return (\n    <div className={'app'}>\n      <ConfigContext.Provider value={[context, setContext]}>\n        <Config/>\n        <div className={'counters-container'}>\n          <RandomNumber/>\n        </div>\n      </ConfigContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}